
@{
    Layout = "AdminLayout";
}
<style>
    /* General Styles */
    body {
        background-color: #191C24;
        color: white;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .container-fluid {
        padding: 1.5rem;
    }

    .bg-primary {
        background-color: #191C24 !important; /* Bright blue */
        color: #ffffff !important;
    }

    .bg-secondary {
        background-color: #191C24 !important; /* Light gray background */
        color: #333;
    }

    .rounded {
/*         border-radius: 0.75rem; /* Rounded corners */
 */    }

    .p-4 {
        padding: 1.5rem; /* Padding */
    }

    /* Header and Alerts */
    .navbar-dark .navbar-nav .nav-link {
        color: #ffffff !important;
    }

    .alert-primary {
        background-color: #191C24 !important; /* Light gray background */
/*         border-color: #007bff !important;
 */        color: #ffffff;
    }

    .progress-bar.bg-primary {
        background-color: #191C24 !important; /* Light gray background */
    }

    /* Cards and Widgets */
    .card {
        background-color: #191C24 !important; /* Light gray background */
/*         border: 1px solid #e1e5eb;
 */        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease;
    }

        .card:hover {
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
        }

        .card .icon {
            font-size: 2rem;
            color: #007bff;
        }

        .card .details {
            margin-left: 1rem;
        }

        .card h6 {
            font-size: 1.25rem;
            margin-bottom: 0.5rem;
        }
    /* Add some spacing and styling to task items */
    .todo-list {
        max-height: 200px;
        overflow-y: auto;
    }

    .task-item {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 8px 0;
        border-bottom: 1px solid #dee2e6;
    }

        .task-item span {
            flex-grow: 1;
            margin-left: 8px;
        }

        .task-item button {
            background: none;
            border: none;
            color: #dc3545;
            cursor: pointer;
        }

    /* Table Styles */
    .table thead th {
        background-color: #191C24 !important; /* Light gray background */
        color: #ffffff;
        border-bottom: 1px solid #0056b3;
    }

    .table tbody tr {
        background-color: #191C24 !important; /* Light gray background */
    }

        .table tbody tr:nth-child(even) {
            background-color: #191C24 !important; /* Light gray background */
        }

        .table tbody tr:hover {
            background-color: #e9ecef; /* Hover effect for rows */
        }

    .table tbody td {
        vertical-align: middle;
    }

    /* Form and Input Styles */
    .form-control {
/*         border: 1px solid #ced4da;
        border-radius: 0.375rem; */
        box-shadow: none;
/*         transition: border-color 0.3s ease;
 */    }

        .form-control:focus {
/*             border-color: #007bff;
 */            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

    .btn-primary {
        background-color: #191C24 !important; /* Light gray background */
/*         border-color: #007bff;
 */        color: #ffffff;
        transition: background-color 0.3s ease, border-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #191C24 !important; /* Light gray background */
            border-color: #004085;
        }

    /* Task List Styles */
    .todo-list {
        max-height: 300px;
        overflow-y: auto;
    }

        .todo-list .task-item {
            border-bottom: 1px solid #e1e5eb;
            padding: 0.5rem 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

            .todo-list .task-item input[type="checkbox"] {
                margin-right: 1rem;
            }

            .todo-list .task-item span {
                flex-grow: 1;
            }

            .todo-list .task-item button {
                background: none;
                border: none;
                color: #dc3545;
                cursor: pointer;
            }
</style>


<!-- Sale & Revenue Start -->
<div class="container-fluid pt-4">
    <div class="row g-4">
        <div class="col-sm-6 col-xl-3">
            <div class="card d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-chart-line icon"></i>
                <div class="details">
                    <p class="mb-2">Today Sale</p>
                    <h6 class="mb-0">$@ViewBag.LastDaySales</h6>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="card d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-chart-bar icon"></i>
                <div class="details">
                    <p class="mb-2">Total Sale</p>
                    <h6 class="mb-0">$@ViewBag.totalSale</h6>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="card d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-chart-area icon"></i>
                <div class="details">
                    <p class="mb-2">Product Count</p>
                    <h6 class="mb-0">@ViewBag.productsCount</h6>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-xl-3">
            <div class="card d-flex align-items-center justify-content-between p-4">
                <i class="fa fa-chart-pie icon"></i>
                <div class="details">
                    <p class="mb-2">User Count</p>
                    <h6 class="mb-0">@ViewBag.userCount</h6>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Sale & Revenue End -->
<!-- Widgets Start -->
<div class="container-fluid pt-4">
    <div class="row g-4">
        <div class="col-sm-12 col-md-6 col-xl-4">
            <div class="card h-100">
                <div class="d-flex align-items-center justify-content-between p-4">
                    <h6 class="mb-0">Messages</h6>
                    <a asp-controller="ContactUs" asp-action="Index" >Show All</a>
                </div>
                <div class="p-4 todo-list">
                    @if (ViewData["ContactMessages"] != null && ((IEnumerable<HereToYou.Models.ContactUs>)ViewData["ContactMessages"]).Any())
                    {
                        var contactMessages = (IEnumerable<HereToYou.Models.ContactUs>)ViewData["ContactMessages"];

                        foreach (var contact in contactMessages)
                        {
                            <div class="task-item">
                                <input type="checkbox" />
@*                                 <span>Message from: @contact.Name </span>
 *@                                <span>@contact.Message</span>
@*                                 <button><i class="fa fa-times"></i></button>
 *@                            </div>
                        }
                    }
                    else
                    {
                        <p>No messages available.</p>
                    }
                </div>
            </div>
        </div>

        <div class="col-sm-12 col-md-6 col-xl-4">
            <div class="h-100 bg-secondary rounded p-4">
                <div class="d-flex align-items-center justify-content-between mb-4">
                    <h6 class="mb-0">Calender</h6>
                </div>
                <div id="calender"></div>
            </div>
        </div>

        <div class="col-sm-12 col-md-6 col-xl-4">
            <div class="card h-100">
                <div class="d-flex align-items-center justify-content-between p-4">
                    <h6 class="mb-0">To Do List</h6>
                </div>
                <div class="p-4">
                    <div class="d-flex mb-2">
                        <input id="taskInput" class="form-control  border-0" type="text" placeholder="Enter task" />
                        <button id="addTaskButton" type="button" class="btn btn-primary ms-2">Add</button>
                    </div>
                    <div id="todoList" class="todo-list">
                        <!-- Tasks will be dynamically added here -->
                    </div>
                </div>
            </div>
        </div>

    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const addTaskButton = document.getElementById('addTaskButton');
            const taskInput = document.getElementById('taskInput');
            const todoList = document.getElementById('todoList');

            // Function to create a new task item
            function createTaskItem(taskContent) {
                const taskItem = document.createElement('div');
                taskItem.className = 'task-item';

                const checkbox = document.createElement('input');
                checkbox.className = 'form-check-input m-0';
                checkbox.type = 'checkbox';

                const span = document.createElement('span');
                span.textContent = taskContent;

                const removeButton = document.createElement('button');
                removeButton.innerHTML = '<i class="fa fa-times"></i>';
                removeButton.onclick = () => taskItem.remove();

                taskItem.appendChild(checkbox);
                taskItem.appendChild(span);
                taskItem.appendChild(removeButton);

                return taskItem;
            }

            // Add task on button click
            addTaskButton.addEventListener('click', () => {
                const taskContent = taskInput.value.trim();
                if (taskContent) {
                    const taskItem = createTaskItem(taskContent);
                    todoList.appendChild(taskItem);
                    taskInput.value = ''; // Clear input field
                }
            });

            // Optional: Add task on Enter key press
            taskInput.addEventListener('keypress', (event) => {
                if (event.key === 'Enter') {
                    event.preventDefault();
                    addTaskButton.click();
                }
            });
        });
    </script>

</div>
<!-- Widgets End -->
